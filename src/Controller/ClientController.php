<?php
/**
 *
 */

namespace App\Controller;

use App\Model\Entity\Order;
use App\Model\Table\AdminsTable;
use App\Model\Table\OrdersTable;
use Cake\Controller\Controller;
use Cake\Log\Log;
use Cake\Utility\Hash;

/**
 * @property OrdersTable $Orders
 * @property AdminsTable $Admins
 */
class ClientController extends Controller
{
    /**
     * Initialization hook method.
     *
     * Use this method to add common initialization code like loading components.
     *
     * e.g. `$this->loadComponent('Security');`
     *
     * @return void
     * @throws
     */
    public function initialize ()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadComponent('Flash');
        $this->loadModel('Orders');
    }

    public function delivery ()
    {
        $this->set('title', 'Delivery form');
        $this->loadModel('Orders');
        $this->loadModel('Admins');

        $incrementNumber = $this->Orders->find()
            ->select([ 'id' => 'coalesce(Max(id), 0)' ])
            ->limit(1)->first();

        $new_order_id = $incrementNumber->id + 1;

        $adminUsers = Hash::combine(
            $this->Admins->find()->toArray(),
            '{n}.id', '{n}.username');

        if ( $this->request->is([ 'post' ]) ) {
            $data                 = $this->request->getData();
            $data[ 'order_code' ] = sprintf('ANTMAN_%s', $new_order_id);
            $data[ 'rfid_code' ]  = sprintf('RFID_CODE_%s', $new_order_id);
            $data[ 'bar_code' ]   = sprintf('BAR_CODE_%s', $new_order_id);
            $data[ 'qr_code' ]    = sprintf('QR_CODE_%s', $new_order_id);

            /** @var Order $order */
            $order = $this->Orders->newEntity($data);

            if ( $order->getErrors() || !$this->Orders->save($order) ) {
                $this->Flash->error('Oops, something wrong when saving order');
                $this->setVariablesAfterSave($adminUsers);
                return;
            }

            $this->Flash->success('Data created successfully');
            return $this->redirect([ 'controller' => 'Client', 'action' => 'success', $order->id ]);
        }

        $this->setVariablesAfterSave($adminUsers);
    }

    public function setVariablesAfterSave ($users = [])
    {
        $this->set([ 'users' => $users ]);
        $this->viewBuilder()->setLayout('client');
    }

    public function success ($id)
    {
        $order = $this->Orders->getById($id)[ 0 ];
        $this->set(compact('order'));
        $this->setVariablesAfterSave();
    }
}
