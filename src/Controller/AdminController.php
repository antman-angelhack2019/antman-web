<?php

namespace App\Controller;

use App\Model\Entity\Order;
use App\Model\Table\AdminsTable;
use App\Model\Table\OrdersTable;
use Cake\Controller\Component\AuthComponent;
use Cake\Event\Event;
use Cake\Log\Log;
use Cake\Utility\Hash;

/**
 * Class AdminController
 * @property AuthComponent $Auth
 * @property OrdersTable   $Orders
 * @property AdminsTable   $Admins
 */
class AdminController extends AppController
{

    public function initialize ()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function beforeFilter (Event $event)
    {
        $this->getEventManager()->off($this->Csrf);
        return parent::beforeFilter($event); // TODO: Change the autogenerated stub
    }

    public function login ()
    {
        $this->set('title', 'Login');
        if ( $this->request->is('post') ) {
            if ( !$this->Auth->user() ) {
                $this->Auth->logout();
            }

            $user = $this->Auth->identify();
            if ( $user ) {
                $this->Auth->setUser($user);
                return $this->redirect($this->Auth->redirectUrl());

            } else {
                $this->Flash->error(__('Username or password is incorrect'));
            }
        }

        $this->viewBuilder()->setLayout('login');
    }

    public function deliveryList ()
    {
        $this->loadModel('Orders');
        $orders = $this->Orders->find()
            ->contain(['Admins'])->toArray();

        $this->set(compact('orders'));
        $this->viewBuilder()->setLayout('client');
    }

    public function confirmOrder ($id)
    {
        $this->loadModel('Orders');
        $this->loadModel('Admins');

        /** @var Order $order */
        $order = $this->Orders
            ->find()
            ->where(['Orders.id' => $id])
            ->contain(['Admins'])
            ->first();

        $users = Hash::combine(
            $this->Admins->find()->toArray(),
            '{n}.id', '{n}.username');

        if ($this->request->is(['post'])) {

            $data = $this->request->getData();

            $order = $this->Admins->patchEntity($order, $data);

            if ($order->getErrors() || !$this->Orders->save($order)) {
                $this->Flash->error('Oops, something went wrong man');
                return;
            }

            $this->Flash->success('update successfully');
            return $this->redirect(['controller' => 'Admin', 'action' => 'deliveryList']);
        }

        $this->set(compact('order', 'users'));
        $this->viewBuilder()->setLayout('client');
    }
}

